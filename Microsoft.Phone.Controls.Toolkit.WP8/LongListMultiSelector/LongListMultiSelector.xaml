<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:phone="clr-namespace:Microsoft.Phone.Controls;assembly=Microsoft.Phone"
    xmlns:controls="clr-namespace:Microsoft.Phone.Controls"
    xmlns:primitives="clr-namespace:Microsoft.Phone.Controls.Primitives">

    <Style x:Key="MultiSelectCheckBoxStyle" TargetType="CheckBox">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="CheckBox">
                    <Grid Background="Transparent" HorizontalAlignment="Left" Margin="25,0,0,0">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal"/>
                                <VisualState x:Name="MouseOver"/>
                                <VisualState x:Name="Pressed" >
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="CheckBackground" Storyboard.TargetProperty="Background">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource PhoneRadioCheckBoxPressedBrush}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="CheckMark" Storyboard.TargetProperty="Fill">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource PhoneButtonBasePressedForegroundBrush}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="CheckBackground" Storyboard.TargetProperty="BorderBrush">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource PhoneDisabledBrush}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="CheckMark" Storyboard.TargetProperty="Fill">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource PhoneDisabledBrush}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="CheckStates">
                                <VisualState x:Name="Checked">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="CheckMark" Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Unchecked" />
                                <VisualState x:Name="Indeterminate" />
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Grid VerticalAlignment="Top">
                            <Border x:Name="CheckBackground" IsHitTestVisible="False" VerticalAlignment="Center" HorizontalAlignment="Left" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{StaticResource PhoneBorderThickness}" Height="32" Width="32"/>
                            <Path x:Name="CheckMark" IsHitTestVisible="False" Visibility="Collapsed" Width="23" Height="21" Stretch="Fill" HorizontalAlignment="Center" VerticalAlignment="Center" Fill="{StaticResource PhoneRadioCheckBoxCheckBrush}"
                                  Data="M0,123 L39,93 L124,164 L256,18 L295,49 L124,240 z" StrokeLineJoin="Round" StrokeThickness="3" FlowDirection="LeftToRight"/>
                        </Grid>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="LongListMultiSelectorItemGridStyle" TargetType="controls:LongListMultiSelectorItem">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="Margin" Value="24,0,-12,12"/>
        <Setter Property="Padding" Value="0"/>
        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
        <Setter Property="VerticalContentAlignment" Value="Stretch"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="controls:LongListMultiSelectorItem">
                    <Border x:Name="LayoutRoot" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" HorizontalAlignment="{TemplateBinding HorizontalAlignment}" VerticalAlignment="{TemplateBinding VerticalAlignment}">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal"/>
                                <VisualState x:Name="MouseOver"/>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background" Storyboard.TargetName="LayoutRoot">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource TransparentBrush}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <DoubleAnimation Duration="0" To=".5" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="ContentContainer"/>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="SelectionStates">
                                <VisualState x:Name="Unselected"/>
                                <VisualState x:Name="Selected">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="SelectionTriangle">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="SelectionCheck">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="HasSelectionStates">
                                <VisualState x:Name="Opened">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="SelectionRectangle">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="OuterCover">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Closed"/>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Grid>
                            <ContentControl x:Name="ContentContainer"
    								ContentTemplate="{TemplateBinding ContentTemplate}"
    								Content="{TemplateBinding Content}"
    								Foreground="{TemplateBinding Foreground}"
    								HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
    								VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
									/>
                            <Rectangle x:Name="SelectionRectangle" Visibility="Collapsed"
                                           Stroke="{StaticResource PhoneAccentBrush}" StrokeThickness="3"/>
                            <Polyline x:Name="SelectionTriangle" Visibility="Collapsed"
									HorizontalAlignment="Right" VerticalAlignment="Top"
                                    Points="46,0 46,46 0,0"
								    Fill="{StaticResource PhoneAccentBrush}"
								/>
                            <Polyline x:Name="SelectionCheck" Visibility="Collapsed"
                                    Margin="0,4,4,0" HorizontalAlignment="Right" VerticalAlignment="Top"
								    Points="19,0 22,3 9,19 0,9 3,6 9,13"
								    Fill="White"
									/>
                            <Grid x:Name="OuterCover" IsHitTestVisible="True" Visibility="Collapsed" Background="Transparent" VerticalAlignment="Stretch" HorizontalAlignment="Stretch"/>
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="LongListMultiSelectorItemListStyle" TargetType="controls:LongListMultiSelectorItem">
        <Style.Setters>
            <Setter Property="Background" Value="{StaticResource PhoneAccentBrush}"/>
            <Setter Property="CheckBoxMargin" Value="0,10,0,0"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="controls:LongListMultiSelectorItem">
                        <Grid MinHeight="52">
                            <Grid.Resources>
                                <ExponentialEase EasingMode="EaseIn" Exponent="8" x:Key="ExponentialEaseIn"/>
                                <QuadraticEase EasingMode="EaseOut" x:Key="QuadraticEaseOut"/>
                            </Grid.Resources>
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="SelectionEnabledStates">
                                    <VisualStateGroup.Transitions>
                                        <VisualTransition x:Name="ClosedToExposed"
                                                          From="Closed" To="Exposed"
                                                          GeneratedDuration="0:0:0.30">
                                            <Storyboard>
                                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)"
                                                                               Storyboard.TargetName="HintPanel">
                                                    <EasingDoubleKeyFrame KeyTime="0:0:0.0" Value="0.0" EasingFunction="{StaticResource QuadraticEaseOut}"/>
                                                    <EasingDoubleKeyFrame KeyTime="0:0:0.30" Value="1.0" EasingFunction="{StaticResource QuadraticEaseOut}"/>
                                                </DoubleAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </VisualTransition>
                                        <VisualTransition x:Name="ExposedToClosed"
                                                          From="Exposed" To="Closed"
                                                          GeneratedDuration="0:0:0.30">
                                            <Storyboard>
                                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)"
                                                                               Storyboard.TargetName="HintPanel">
                                                    <EasingDoubleKeyFrame KeyTime="0:0:0.0" Value="1.0" EasingFunction="{StaticResource QuadraticEaseOut}"/>
                                                    <EasingDoubleKeyFrame KeyTime="0:0:0.30" Value="0.0" EasingFunction="{StaticResource QuadraticEaseOut}"/>
                                                </DoubleAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </VisualTransition>
                                        <VisualTransition x:Name="ExposedToOpened"
                                                          From="Exposed" To="Opened"
                                                          GeneratedDuration="0:0:0.30">
                                            <Storyboard>
                                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.TranslateX)"
                                                                               Storyboard.TargetName="SelectBox">
                                                    <EasingDoubleKeyFrame KeyTime="0:0:0.0" Value="-58" EasingFunction="{StaticResource ExponentialEaseIn}"/>
                                                    <EasingDoubleKeyFrame KeyTime="0:0:0.15" Value="0" EasingFunction="{StaticResource ExponentialEaseIn}"/>
                                                </DoubleAnimationUsingKeyFrames>
                                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.TranslateX)"
                                                                               Storyboard.TargetName="Presenter">
                                                    <EasingDoubleKeyFrame KeyTime="0:0:0.0" Value="0" EasingFunction="{StaticResource ExponentialEaseIn}"/>
                                                    <EasingDoubleKeyFrame KeyTime="0:0:0.15" Value="51" EasingFunction="{StaticResource ExponentialEaseIn}"/>
                                                </DoubleAnimationUsingKeyFrames>
                                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)"
                                                                               Storyboard.TargetName="HintPanel">
                                                    <EasingDoubleKeyFrame KeyTime="0:0:0.0" Value="1.0" EasingFunction="{StaticResource QuadraticEaseOut}"/>
                                                    <EasingDoubleKeyFrame KeyTime="0:0:0.30" Value="0.0" EasingFunction="{StaticResource QuadraticEaseOut}"/>
                                                </DoubleAnimationUsingKeyFrames>
                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)"
                                                                               Storyboard.TargetName="SelectBox">
                                                    <DiscreteObjectKeyFrame KeyTime="0:0:0.0" Value="Visible"/>
                                                </ObjectAnimationUsingKeyFrames>
                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.IsHitTestVisible)"
                                                                               Storyboard.TargetName="HitTargetPanel">
                                                    <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="False"/>
                                                </ObjectAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </VisualTransition>
                                        <VisualTransition x:Name="ClosedToOpened"
                                                          From="Closed" To="Opened"
                                                          GeneratedDuration="0:0:0.15">
                                            <Storyboard>
                                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.TranslateX)"
                                                                               Storyboard.TargetName="SelectBox">
                                                    <EasingDoubleKeyFrame KeyTime="0:0:0.0" Value="-58" EasingFunction="{StaticResource ExponentialEaseIn}"/>
                                                    <EasingDoubleKeyFrame KeyTime="0:0:0.15" Value="0" EasingFunction="{StaticResource ExponentialEaseIn}"/>
                                                </DoubleAnimationUsingKeyFrames>
                                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.TranslateX)"
                                                                               Storyboard.TargetName="Presenter">
                                                    <EasingDoubleKeyFrame KeyTime="0:0:0.0" Value="0" EasingFunction="{StaticResource ExponentialEaseIn}"/>
                                                    <EasingDoubleKeyFrame KeyTime="0:0:0.15" Value="51" EasingFunction="{StaticResource ExponentialEaseIn}"/>
                                                </DoubleAnimationUsingKeyFrames>
                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)"
                                                                               Storyboard.TargetName="SelectBox">
                                                    <DiscreteObjectKeyFrame KeyTime="0:0:0.0" Value="Visible"/>
                                                </ObjectAnimationUsingKeyFrames>
                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.IsHitTestVisible)"
                                                                               Storyboard.TargetName="HitTargetPanel">
                                                    <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="False"/>
                                                </ObjectAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </VisualTransition>
                                        <VisualTransition x:Name="OpenedToClosed"
                                                          From="Opened" To="Closed"
                                                          GeneratedDuration="0:0:0.15">
                                            <Storyboard>
                                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.TranslateX)"
                                                                               Storyboard.TargetName="SelectBox">
                                                    <EasingDoubleKeyFrame KeyTime="0:0:0.0" Value="0" EasingFunction="{StaticResource ExponentialEaseIn}"/>
                                                    <EasingDoubleKeyFrame KeyTime="0:0:0.15" Value="-58" EasingFunction="{StaticResource ExponentialEaseIn}"/>
                                                </DoubleAnimationUsingKeyFrames>
                                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.TranslateX)"
                                                                               Storyboard.TargetName="Presenter">
                                                    <EasingDoubleKeyFrame KeyTime="0:0:0.0" Value="51" EasingFunction="{StaticResource ExponentialEaseIn}"/>
                                                    <EasingDoubleKeyFrame KeyTime="0:0:0.15" Value="0" EasingFunction="{StaticResource ExponentialEaseIn}"/>
                                                </DoubleAnimationUsingKeyFrames>
                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)"
                                                                               Storyboard.TargetName="SelectBox">
                                                    <DiscreteObjectKeyFrame KeyTime="0:0:0.15" Value="Collapsed"/>
                                                </ObjectAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </VisualTransition>
                                    </VisualStateGroup.Transitions>
                                    <VisualStateGroup.States>
                                        <VisualState x:Name="Closed"/>
                                        <VisualState x:Name="Exposed">
                                            <Storyboard>
                                                <DoubleAnimation Storyboard.TargetProperty="(UIElement.Opacity)"
                                                                 Storyboard.TargetName="HintPanel"
                                                                 Duration="0" To="1.0"/>
                                            </Storyboard>
                                        </VisualState>
                                        <VisualState x:Name="Opened">
                                            <Storyboard>
                                                <DoubleAnimation Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.TranslateX)"
                                                                 Storyboard.TargetName="SelectBox"
                                                                 Duration="0" To="0"/>
                                                <DoubleAnimation Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.TranslateX)"
                                                                 Storyboard.TargetName="Presenter"
                                                                 Duration="0" To="51"/>
                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)"
                                                                               Storyboard.TargetName="SelectBox">
                                                    <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="Visible"/>
                                                </ObjectAnimationUsingKeyFrames>
                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)"
                                                                               Storyboard.TargetName="OuterCover">
                                                    <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="Visible"/>
                                                </ObjectAnimationUsingKeyFrames>
                                                <DoubleAnimation Storyboard.TargetProperty="(UIElement.Opacity)"
                                                                 Storyboard.TargetName="HintPanel"
                                                                 Duration="0" To="0.0"/>
                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.IsHitTestVisible)"
                                                                               Storyboard.TargetName="HitTargetPanel">
                                                    <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="False"/>
                                                </ObjectAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </VisualState>
                                    </VisualStateGroup.States>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <primitives:TiltUserControl controls:TiltEffect.SuppressTilt="False">
                                <Grid x:Name="ContentPanel" HorizontalAlignment="Stretch" Background="Transparent">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="*"/>
                                        <ColumnDefinition Width="Auto"/>
                                    </Grid.ColumnDefinitions>
                                    <Grid Grid.Column="0" HorizontalAlignment="Stretch" primitives:ClipToBounds.IsEnabled="True">
                                        <ContentPresenter x:Name="Presenter" CacheMode="BitmapCache">
                                            <ContentPresenter.RenderTransform>
                                                <CompositeTransform/>
                                            </ContentPresenter.RenderTransform>
                                        </ContentPresenter>
                                    </Grid>
                                    <ContentControl x:Name="InfoPresenter" Grid.Column="1"
                                                    VerticalAlignment="Top"
                                                    Content="{TemplateBinding ContentInfo}"
                                                    ContentTemplate="{TemplateBinding ContentInfoTemplate}"
                                                    CacheMode="BitmapCache"/>
                                    <Grid x:Name="OuterCover" IsHitTestVisible="True"
                                          Visibility="Collapsed" Background="Transparent" Grid.ColumnSpan="2"/>
                                </Grid>
                            </primitives:TiltUserControl>
                            <Rectangle x:Name="HitTargetPanel" Width="58"
                                       HorizontalAlignment="Left"
                                       Fill="Transparent"/>
                            <Rectangle x:Name="HintPanel" MinWidth="20"
                                       HorizontalAlignment="Left"
                                       Style="{TemplateBinding HintPanelStyle}"
                                       Fill="{TemplateBinding Background}"
                                       StrokeThickness="0" Opacity="0.0"
                                       IsHitTestVisible="False"/>
                            <Grid Background="Transparent" HorizontalAlignment="Left">
                                <CheckBox x:Name="SelectBox"
                                          Style="{StaticResource MultiSelectCheckBoxStyle}"
                                          Margin="{TemplateBinding CheckBoxMargin}"
                                          Visibility="Collapsed"
                                          IsChecked="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=IsSelected, Mode=TwoWay}"
                                          controls:TiltEffect.SuppressTilt="False">
                                    <CheckBox.RenderTransform>
                                        <CompositeTransform TranslateX="-58"/>
                                    </CheckBox.RenderTransform>
                                </CheckBox>
                            </Grid>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style.Setters>
    </Style>

    <Style TargetType="controls:LongListMultiSelector">
        <Setter Property="DefaultListItemContainerStyle" Value="{StaticResource LongListMultiSelectorItemListStyle}"/>
        <Setter Property="DefaultGridItemContainerStyle" Value="{StaticResource LongListMultiSelectorItemGridStyle}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="controls:LongListMultiSelector">
                    <phone:LongListSelector x:Name="InnerSelector"
                        GridCellSize="{TemplateBinding GridCellSize}"
                        GroupFooterTemplate="{TemplateBinding GroupFooterTemplate}"
                        GroupHeaderTemplate="{TemplateBinding GroupHeaderTemplate}"
                        HideEmptyGroups="{TemplateBinding HideEmptyGroups}"
                        IsGroupingEnabled="{TemplateBinding IsGroupingEnabled}"
                        ItemsSource="{TemplateBinding ItemsSource}"
                        JumpListStyle="{TemplateBinding JumpListStyle}"
                        ListFooter="{TemplateBinding ListFooter}"
                        ListFooterTemplate="{TemplateBinding ListFooterTemplate}"
                        ListHeader="{TemplateBinding ListHeader}"
                        ListHeaderTemplate="{TemplateBinding ListHeaderTemplate}"
                    >
                        <phone:LongListSelector.ItemTemplate>
                            <DataTemplate>
                                <controls:LongListMultiSelectorItem Style="{StaticResource LongListMultiSelectorItemListStyle}"
                                    x:Name="LLSItem"
                                    HorizontalContentAlignment="Stretch"
                                    VerticalAlignment="Stretch"
                                    Content="{Binding}"
                                    >
                                </controls:LongListMultiSelectorItem>
                            </DataTemplate>
                        </phone:LongListSelector.ItemTemplate>
                    </phone:LongListSelector>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>
